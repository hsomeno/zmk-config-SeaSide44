#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp Q             &kp W      &kp E               &kp R                   &kp T                                 &kp Y     &kp U  &kp I            &kp O       &lt 6 P        &kp BACKSPACE
&kp TAB     &kp A             &kp S      &kp D               &kp F                   &kp G                                 &kp H     &kp J  &kp K            &kp L       &kp SEMICOLON  &kp ENTER
&kp LSHFT   &mt LEFT_SHIFT Z  &kp X      &kp C               &kp V                   &kp B                                 &kp N     &kp M  &kp COMMA        &kp PERIOD  &kp SLASH      &kp SQT
                              &kp LCTRL  &mt LEFT_ALT LANG1  &mt LEFT_COMMAND LANG2  &lt 3 SPACE  &mkp MB1    &lt 2 SPACE  &mkp MB1         &lt 5 BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&trans  &kp PRCNT  &kp DOLLAR  &kp AMPERSAND  &kp CARET        &kp FSLH                           &kp BSLH        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN  &kp GREATER_THAN   &kp N0
&trans  &kp AT     &kp HASH    &kp ASTERISK   &kp PLUS         &kp EQUAL                          &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI       &kp COLON          &kp N1
&trans  &kp GRAVE  &kp TILDE   &kp MINUS      &kp EXCLAMATION  &kp QUESTION                       &kp PIPE        &kp LBKT              &kp RBKT               &kp SQT        &kp DOUBLE_QUOTES  &kp N2
                   &trans      &trans         &trans           &trans        &trans    &kp COMMA  &kp PERIOD                            &kp ESC
            >;
        };

        NUM {
            bindings = <
&kp ESCAPE      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                    &kp NUMBER_6      &kp N7             &kp N8         &kp N9      &kp N0         &kp BACKSPACE
&kp TAB         &trans        &kp F5        &kp F6        &kp F7        &kp F8                    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS      &kp EQUAL   &kp SEMICOLON  &kp RETURN
&kp LEFT_SHIFT  &trans        &kp F1        &kp F2        &kp F3        &kp F4                    &kp NUMBER_1      &kp NUMBER_2       &kp COMMA      &kp PERIOD  &kp SLASH      &mt RIGHT_SHIFT SQT
                              &trans        &trans        &trans        &trans  &trans    &trans  &kp NUMBER_0                         &kp BACKSLASH
            >;
        };

        ARROW {
            bindings = <
&trans  &kp ESCAPE  &mkp MB4        &kp UP_ARROW    &mkp MB5         &trans                     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &kp BACKSPACE  &kp BACKSPACE
&trans  &kp TAB     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END                    &kp LEFT      &kp DOWN      &kp UP_ARROW  &kp RIGHT_ARROW  &kp RETURN     &kp RET
&trans  &kp F1      &kp F2          &kp F3          &kp F4           &kp F5                     &kp F6        &kp F7        &kp F8        &kp F9           &kp F10        &kp F11
                    &trans          &trans          &trans           &trans   &trans    &trans  &trans                      &kp F12
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans  &kp N1
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &kp N2
                &trans  &trans  &trans  &trans  &trans    &trans  &trans            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N1
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N2
                &trans  &trans  &trans  &kp LS(LG(N5))  &kp LS(LG(N4))    &kp LC(DOWN)  &kp LC(UP_ARROW)          &trans
            >;
        };

        CONFIG {
            bindings = <
&trans  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N0
&trans  &trans          &trans        &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N1
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bootloader  &trans  &trans  &trans  &trans  &kp N2
                        &trans        &trans        &trans        &trans        &trans    &trans  &trans               &trans
            >;
        };
    };
};
